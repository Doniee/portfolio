//Solid
$width: $hex-width;
$color: $light-gray;

// Border
$borderWidth: 2px;
$borderColor: $light-gray;
$borderColor2: #fff;

//calculated values
$root2: 1.41421356237;
$root3: 1.73205080757;
$scaleFactor: 0.57735026919; // = tan(30deg) *this smushes a square into a 60deg/120deg rhombus
$height: $width/$root3;
$capWidth: $width/$root2; // caps being the top and bottom rhombuses
$border: solid #{$borderWidth} #{$borderColor};
$capBorder: solid #{$borderWidth*$root2} #{$borderColor};
$border2: solid #{$borderWidth} #{$borderColor2};
$capBorder2: solid #{$borderWidth*$root2} #{$borderColor2};

.hex {
  position: relative;
  display: inline-block;
  width: $width;
  height: $height;
  background-color: $color;
  margin: $height/2 0;

  &:before,
  &:after {
    content: '';
    position: absolute;
  }
}

.hex-solid {
  &:before,
  &:after {
    width: 0;
    border-left: $width/2 solid transparent;
    border-right: $width/2 solid transparent;
  }

  &:before {
    bottom: 100%;
    border-bottom: $height/2 solid $color;
  }

  &:after {
    top: 100%;
    width: 0;
    border-top: $height/2 solid $color;
  }
}

.hex-border {
  border-left: $border;
  border-right: $border;

  &:before,
  &:after {
    z-index: 1;
    width: $capWidth;
    height: $capWidth;
    transform: scaleY(#{$scaleFactor}) rotate(-45deg);
    background-color: inherit;
    left: ($width - $capWidth)/2 - $borderWidth; //offset by half the difference in
  }

  &:before {
    top: -$width/$root2/2; //half the rhombus height
    border-top: $capBorder;
    border-right: $capBorder;
  }

  &:after {
    bottom: -$width/$root2/2; //half the rhombus height
    border-bottom: $capBorder;
    border-left: $capBorder;
  }
}

.hex-border-secondary {
  border-left: $border2;
  border-right: $border2;

  &:before {
    border-top: $capBorder2;
    border-right: $capBorder2;
  }

  &:after {
    border-bottom: $capBorder2;
    border-left: $capBorder2;
  }
}

// $imageUrl: '../img/me.jpg';

//calculated values
$capBorderWidth: $borderWidth*$root2;
$capBorderHeight: $borderWidth*2/$root3; //needed to offset bg pos
$coverWidth: $width - $borderWidth*2; //the cover up rectangle
$coverHeight: $height - $borderWidth*$scaleFactor*2;
$capHeight: $height - $capBorderHeight;
$bgHeight: $capHeight*2;
$bgHeight: $height*2 - $capBorderHeight*2;
$bgHeight: $height*2 -($borderWidth*2/$root3)*2;
$bgHeight: $height*2 -($borderWidth/$root3)*4;

.hex-image {
  position: relative;
  width: $width;
  height: $height;
  margin: $height/2 0;
  background-color: $color;
  // background-image: url('#{$imageUrl}');
  background-size: auto $bgHeight; //fit to total height, minus borders
  background-position: center;
  border-left: $border;
  border-right: $border;

  //cover up extra shadows
  &:after {
    content: '';
    position: absolute;
    top: $borderWidth*$scaleFactor;
    left: 0;
    width: $coverWidth;
    height: $coverHeight;
    z-index: 2;
    background: inherit;
  }

  .hex-top,
  .hex-bottom {
    position: absolute;
    z-index: 1;
    width: $capWidth;
    height: $capWidth;
    overflow: hidden;
    -webkit-transform: scaleY(#{$scaleFactor}) rotate(-45deg);
    -ms-transform: scaleY(#{$scaleFactor}) rotate(-45deg);
    transform: scaleY(#{$scaleFactor}) rotate(-45deg);
    background: inherit;
    left: ($width - $capWidth)/2 - $borderWidth; //offset by half the difference in
  }

  //counter transform the bg image on the caps
  .hex-top:after,
  .hex-bottom:after {
    content: '';
    position: absolute;
    width: $coverWidth;
    height: $capHeight;
    -webkit-transform: rotate(45deg) scaleY(#{1/$scaleFactor}) translateY(-$height/2 + $capBorderHeight/2);
    -ms-transform: rotate(45deg) scaleY(#{1/$scaleFactor}) translateY(-$height/2 + $borderWidth/2);
    transform: rotate(45deg) scaleY(#{1/$scaleFactor}) translateY(-$height/2 + $borderWidth/2);
    -webkit-transform-origin: 0 0;
    transform-origin: 0px 0px 0px;
    background: inherit;
    //not sure why but this 1px correction seems necessary :(
    // margin-left: 1px;
  }

  //send top to top and bottom to bottom
  .hex-top {
    top: -$width/$root2/2; //half the rhombus height
    border-top: $capBorder;
    border-right: $capBorder;

    &:after {
      background-position: center top;
    }
  }

  .hex-bottom {
    bottom: -$width/$root2/2; //half the rhombus height
    border-bottom: $capBorder;
    border-left: $capBorder;

    &:after {
      background-position: center bottom;
    }
  }
}
